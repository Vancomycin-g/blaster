# 示例目标网址：http://www.example.com/login
# 示例登录目标最终发送的请求数据包地址：http://www.example.com/api/user/login
# 示例图片验证码识别服务：python3 cbhs.py -a admin:123 -p 8999

target_url: 'http://zone.secevery.com/#/login?redirect=%2Flibrary' # 登录目标网址
browser_path: 'C:\Program Files\Google\Chrome\Application\chrome.exe' # 浏览器的路径
headless: true # 设置false显式运行浏览器 true则反之
captchabreak_serverurl: 'http://xuwu:7926@127.0.0.1:7926/cb' # 图片验证码识别服务，使用captchabreak_serverurl文件夹中的脚本进行搭建
before_all_js_expr: '' # 在开始填写账号密码之前执行的js表达式
userinput_jspath: 'document.querySelector("#loginForm > p:nth-child(1) > input")'  # 用户名输入框js path
passinput_jspath: 'document.querySelector("#loginForm > p:nth-child(2) > input")'  # 密码输入框js path
captchainput_jspath: 'document.querySelector("#loginForm > input")'  # 验证码输入框js path
captchaimg_jspath: 'document.querySelector("#loginForm > div > img")' # 验证码图片js path
before_login_js_expr: '' # 在点击登录之前执行的js表达式
loginbutton_jspath: 'document.querySelector("#loginForm > button")'
loginreq_pattern: '*user/login*' # 登录请求的url特征码，实际登录数据包url path
body_exclude_regex: # 排除请求的正则，即只要命中其中任意一个正则的请求响应将被抛弃
- '用户名或密码错误，登录失败'
maxbody_bytes_display: 512 # 登录请求响应包最大限制，超过限制则不会显示
concurrency: 1 # 并发数
timeout_ms: 50000 # 浏览器中操作的超时时间(毫秒)
timeinterval_ms: 300 # 浏览器中操作登录过程中每个操作之间的时间间隔(毫秒)
proxy: '' # 代理